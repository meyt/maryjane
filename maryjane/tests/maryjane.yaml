
context: !options
  working_dir: !eval manifest_dir
  S: !template ${manifest_dir}/stuff
  path: !import os.path
  time: !import datetime from datetime

task1: !watch
  banner: !template |
    [${time.now()}] Executing task1
    source files:
    ${'\n'.join(task1.inputs)}

  actions:
    - !subprocess
      shell: true
      arguments: !template cat ${' '.join(task1.inputs)} > ${task1.output}

  watcher: !watcher
    recursive: True
    predicate: !eval "lambda fn: not has_file_overlap(fn, [task1.output, task2.output])"
    sources:
      - !eval S

  inputs:
    - !template ${S}/a.txt
    - !template ${S}/b.txt
    - !template ${S}/doc/c.txt
  output: !template ${S}/a-b.txt

task2: !watch
  banner: !template |
    Executing task2:
    Compressing
    ${task1.output}
    Into
    ${task2.output}
  actions:
    - !subprocess
      shell: true
      arguments: !template tar --absolute-names -cf ${task2.output} ${task1.output}
  output: !template ${S}/a-b.tar.gz
  watcher: !watcher
    predicate: !eval "lambda fn: has_file_overlap(fn, task1.output)"
    sources:
      - !eval task1.output



